(set-logic QF_UF)
(declare-sort G 0)

(declare-fun f (G G) G)
(declare-const e G)
(declare-fun g (G) G)
(declare-const c G)
(declare-const d G)

(assert (= (f (f e e) e) (f e (f e e))))
(assert (= (f (f e e) c) (f e (f e c))))
(assert (= (f (f e e) d) (f e (f e d))))
(assert (= (f (f e c) e) (f e (f c e))))
(assert (= (f (f e c) c) (f e (f c c))))
(assert (= (f (f e c) d) (f e (f c d))))
(assert (= (f (f e d) e) (f e (f d e))))
(assert (= (f (f e d) c) (f e (f d c))))
(assert (= (f (f e d) d) (f e (f d d))))
(assert (= (f (f c e) e) (f c (f e e))))
(assert (= (f (f c e) c) (f c (f e c))))
(assert (= (f (f c e) d) (f c (f e d))))
(assert (= (f (f c c) e) (f c (f c e))))
(assert (= (f (f c c) c) (f c (f c c))))
(assert (= (f (f c c) d) (f c (f c d))))
(assert (= (f (f c d) e) (f c (f d e))))
(assert (= (f (f c d) c) (f c (f d c))))
(assert (= (f (f c d) d) (f c (f d d))))
(assert (= (f (f d e) e) (f d (f e e))))
(assert (= (f (f d e) c) (f d (f e c))))
(assert (= (f (f d e) d) (f d (f e d))))
(assert (= (f (f d c) e) (f d (f c e))))
(assert (= (f (f d c) c) (f d (f c c))))
(assert (= (f (f d c) d) (f d (f c d))))
(assert (= (f (f d d) e) (f d (f d e))))
(assert (= (f (f d d) c) (f d (f d c))))
(assert (= (f (f d d) d) (f d (f d d))))

(assert (and (= (f e e) e) (= (f e e) e)))
(assert (and (= (f c e) c) (= (f e c) c)))
(assert (and (= (f d e) d) (= (f e d) d)))

(assert (and (= (f e (g e)) e) (= (f (g e) e) e)))
(assert (and (= (f c (g c)) e) (= (f (g c) c) e)))
(assert (and (= (f d (g d)) e) (= (f (g d) d) e)))

(assert (and (and (= (f c d) e) (= (f d c) e) (not (= d (g c))))))

(check-sat)
(get-model)
